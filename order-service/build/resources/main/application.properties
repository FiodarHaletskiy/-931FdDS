
spring.application.name=order-service
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5430/orderDB}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:orderDB}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:orderDB}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.format_sql=true
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka:9192}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.group-id=order-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${AUTH_JWK_SET_URI:http://user-service:8081/oauth2/jwks}
server.port=8079
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.metrics.export.prometheus.enabled=true
topics.order-created=order-created
jwt.secret=some-very-strong-and-long-secret-key-for-jwt-32-bytes